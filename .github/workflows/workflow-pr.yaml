name: Python Pull Request Workflow
on: pull_request
jobs:

  test:
    name: Test
    strategy:
      matrix:
        python-version: [3.7, 3.8]
        os: [ubuntu-18.04]
    runs-on: ${{ matrix.os }}
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1.2.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Code Quality
        run: poetry run black . --check

      - name: Test with pytest
        run: poetry run pytest --cov tests/
